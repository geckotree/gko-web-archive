{
  "name": "grunt-remfallback",
  "description": "Finds rem values in CSS and creates fallbacks with px values.",
  "version": "0.0.5",
  "homepage": "https://github.com/thomasdobber/grunt-remfallback",
  "author": {
    "name": "Thomas Dobber",
    "email": "thomasdobber@gmail.com"
  },
  "maintainers": [
    {
      "name": "Thomas Dobber",
      "email": "thomasdobber@gmail.com"
    }
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/thomasdobber/grunt-remfallback.git"
  },
  "bugs": {
    "url": "https://github.com/thomasdobber/grunt-remfallback/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/thomasdobber/grunt-remfallback/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "dependencies": {
    "css-parse": "~1.6.0",
    "css-stringify": "~1.3.2"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-watch": "~0.5.3"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "grunt",
    "gruntplugin",
    "css",
    "rem",
    "fallback"
  ],
  "contributors": [
    {
      "name": "Thomas Dobber",
      "email": "thomasdobber@gmail.com"
    }
  ],
  "readme": "# grunt-remfallback v0.0.5\n\n> Generate px valued fallbacks for CSS properties with rem values.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-remfallback --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-remfallback');\n```\n\n## The \"remfallback\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `remfallback` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  remfallback: {\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### log\n\nType: `boolean`\nDefault: `false`\n\nLog some information about the processed found root font-size and the amount of rem values.\n\n#### replace\n\nType: `boolean`\nDefault: `false`\n\nReplace rem values by the px values, handy for generating seperate stylesheets.\n\n#### ignoreUnsupported\n\nType: `boolean`\nDefault: `true`\n\nIgnore rem values that are for properties that are unsupported by ltIE9.\n\n##### mediaQuery\n\nType: `boolean`\nDefault: `false`\n\nIgnore rem values within media queries.\n\n#### round\n\nType: `boolean`\nDefault: `false`\n\nRound fallback values.\n\n### Usage Examples\n\n```js\ngrunt.initConfig({\n  remfallback: {\n    options: {\n      log: false,\n      replace: false\n    },\n    your_target: {\n      files: {\n        'result/example.css': ['test/example.css']\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n* 14-03-14 - v0.0.5 - Improved task and added options.\n* 17-11-13 - v0.0.4 - Added replace option.\n* 17-11-13 - v0.0.3 - Corrected dependencies.\n* 17-11-13 - v0.0.2 - Corrected version number.\n* 17-11-13 - v0.0.1 - Initial release.\n",
  "readmeFilename": "README.md",
  "_id": "grunt-remfallback@0.0.5",
  "dist": {
    "shasum": "ca43b38b33f6a8a1587c43471096428ef69c51e9"
  },
  "_from": "grunt-remfallback@0.0.5",
  "_resolved": "https://registry.npmjs.org/grunt-remfallback/-/grunt-remfallback-0.0.5.tgz"
}
