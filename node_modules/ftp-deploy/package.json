{
  "name": "ftp-deploy",
  "version": "0.7.0",
  "author": {
    "name": "Rick Bergfalk",
    "email": "rick.bergfalk@gmail.com",
    "url": "http://rickbergfalk.com/"
  },
  "description": "Ftp a folder from your local disk to an ftp destination. Does not delete from destination directory. Derived from grunt-ftp-deploy",
  "keywords": [
    "ftp",
    "deploy"
  ],
  "dependencies": {
    "jsftp": "1.2.x",
    "async": "0.2.x",
    "minimatch": "0.2.12",
    "read": "1.0.5"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/rickbergfalk/ftp-deploy"
  },
  "bugs": {
    "url": "https://github.com/rickbergfalk/ftp-deploy/issues"
  },
  "contributors": [
    {
      "name": "Ondrej",
      "url": "https://github.com/der-On"
    },
    {
      "name": "keyle",
      "url": "https://github.com/keyle"
    }
  ],
  "main": "ftp-deploy",
  "readme": "# ftp-deploy\r\n\r\nFtp a folder from your local disk to a remote ftp destination. Does not delete from destination directory. Derived from [https://github.com/zonak/grunt-ftp-deploy](https://github.com/zonak/grunt-ftp-deploy \"zonak/grunt-ftp-deploy\").\r\n\r\nA Node.js package.\r\n\r\n\r\n## Usage\r\n\r\nThe most basic usage (stops uploading when an error occurs):\r\n\r\n```js\r\nvar FtpDeploy = require('ftp-deploy');\r\nvar ftpDeploy = new FtpDeploy();\r\n\r\nvar config = {\r\n\tusername: \"username\",\r\n\tpassword: \"password\", // optional, prompted if none given\r\n\thost: \"ftp.someserver.com\",\r\n\tport: 21,\r\n\tlocalRoot: __dirname + \"/local-folder\",\r\n\tremoteRoot: \"/public_html/remote-folder/\",\r\n\texclude: ['.git', '.idea', 'tmp/*']\r\n}\r\n\t\r\nftpDeploy.deploy(config, function(err) {\r\n\tif (err) console.log(err)\r\n\telse console.log('finished');\r\n});\r\n```\r\n\r\nTo be notified of what ftpDeploy is doing:\r\n\r\n```\r\nftpDeploy.on('uploading', function(data) {\r\n    data.totalFileCount;       // total file count being transferred\r\n    data.transferredFileCount; // number of files transferred\r\n    data.percentComplete;      // percent as a number 1 - 100\r\n    data.filename;             // filename being uploaded\r\n    data.relativePath;         // relative path to file being uploaded from local root location\r\n});\r\nftpDeploy.on('uploaded', function(data) {\r\n\tconsole.log(data);         // same data as uploading event\r\n});\r\n```\r\n\r\nTo continue uploading files even if a file upload fails: \r\n\r\n```\r\nconfig.continueOnError = true;\r\n\r\nftpDeploy.deploy(config, function(err) {\r\n\tif (err) console.log(err) // error authenticating or creating/traversing directory\r\n\telse console.log('finished');\r\n});\r\n\r\nftpDeploy.on('upload-error', function (data) {\r\n\tconsole.log(data.err); // data will also include filename, relativePath, and other goodies\r\n});\r\n```\r\n\r\n\r\n## Changes\r\n\r\n- 0.7.x\r\n\t- added prompting user for FTP password if none given in config\r\n\r\n- 0.6.x\r\n    - added optional ```continueOnError``` config. When set to true, ftp-deploy continues to upload files after a failed put. When not specified or set to false, the ```.deploy()``` callback is called immediately after a failed put.\r\n    - added ```upload-error``` event\r\n    - removed ```stopOnError``` config setting in preference of ```continueOnError```\r\n\r\n- 0.5.x\r\n\t- upgraded jsftp from 0.6.x to 1.2.x\r\n\t- Added ```stopOnError``` to configuration.\r\n\t- added ```error``` event. \r\n\t- deprecated paralleluploads config setting (no longer supported by jsftp)\r\n\r\n- 0.4.x\r\n    - uploading and uploaded events emit data instead of a relative file path.\r\n\r\n- 0.3.x\r\n\t- New config setting ```exclude``` can be used to exclude folders/files from the ftp deploy process\r\n\r\n- 0.2.x\r\n    - Requiring ftp-deploy returns the FtpDeploy object, and you will need to instantiate is separately on your own.\r\n    - New config setting ```paralleluploads```: sets number of  parallelUploads (within a specific folder)\r\n    - ftpDeploy instance has properties ```transferred``` and ```total```. Useful for determining progress based on file count.\r\n\r\n\r\n## Installation\r\n\r\n```js\r\nnpm install ftp-deploy\r\n```\r\n\r\n\r\n## License \r\n\r\nMIT\r\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/rickbergfalk/ftp-deploy",
  "_id": "ftp-deploy@0.7.0",
  "_from": "ftp-deploy@~0.7.0"
}
